*, *::before, *::after {
  box-sizing: border-box;
  font-family: 'Roboto Condensed';
  font-weight: light;
}

body {
  padding: 0;
  margin: 0;
  background: linear-gradient(to right, #a4aaff, #cea4ff, #a4fff9);
}

.calculator-grid {
  display: grid; /* Displays an element as a block-level grid container */
  justify-content: center; /* Items are positioned in the center of the container */
  align-content: center; /* Lines are packed toward the center of the flex container */
  min-height: 100vh;
  grid-template-columns: repeat(4, 100px); /* Specifies the size(s) of the columns and rows */
  grid-template-rows: minmax(120px, auto) repeat(5, 100px);
}

.calculator-grid > button {
  cursor: pointer;
  font-size: 2rem;
  border: 1px solid white;
  outline: none; /* specifies the style of the outline */
  background-color: rgba(255, 255, 255, .65);
}

.calculator-grid > button:hover {
  background-color: rgba(255, 255, 255, .9);
}

.span-two {
  grid-column: span 2; /* specifies a grid item's size and location in a grid layout */
}

.display {
  grid-column: 1 / -1;
  background-color: rgba(0, 0, 0, .70);
  display: flex;
  align-items: flex-end; /* Items are positioned at the end of the container */
  justify-content: space-around; /* aligns the flexible container's items when the items do not use all available space on the main-axis (horizontally) */
  flex-direction: column; /* specifies the direction of the flexible items. displayed vertically, as a column */
  padding: 10px; /* generate space around an element's content, inside of any defined borders */
  word-wrap: break-word; /* allows long words to be able to be broken and wrap onto the next line. */
  word-break: break-all; /* To prevent overflow, word may be broken at any character */
}

.display .computation {
  color: #ffff;
  font-size:  25px;
}

.display .result {
  color: #ffff;
  font-size:  45px;
}